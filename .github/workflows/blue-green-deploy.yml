name: blue-green deployment

on:
  push:
    branches:
      - main
    paths:
      - "blue-green-deployment/*"
      - "blue-green-deployment/dockerfile/*"
jobs:
  Image_Build:
    runs-on: self-hosted # 내 Window 환경에서 Terraform 실행

    steps:
        # 코드 체크아웃
      - name: Check out Code
        uses: actions/checkout@v3

        # 이미지 빌드
      - name: Docker Build
        working-directory: /mnt/c/Users/Snetsystems/Documents/GitHub/DevOps-RoadMap/blue-green-deployment/dockerfile
        run: |
          docker build -t rnjstngks/blud-green:${{ github.run_number }} .

  Image_Push:
    runs-on: self-hosted # 내 Window 환경에서 Terraform 실행

    steps:
        # 코드 체크아웃
      - name: Check out Code
        uses: actions/checkout@v3

        # DockerHub 로그인
      - name: Docker Hub login
        uses: docker/login-action@v2
        with:
            username: ${{ secrets.DOCKER_USERNAME }} # Docker Hub 사용자명
            password: ${{ secrets.DOCKER_PASSWORD }} # Docker Hub 비밀번호

        # 이미지 Push
      - name: Docker Push
        run: |
          docker push rnjstngks/blud-green:${{ github.run_number }}

  Change_Yaml_file:
    runs-on: self-hosted # 내 Window 환경에서 Terraform 실행        

    steps:
      - name: Change Deployment
        working-directory: /mnt/c/Users/Snetsystems/Documents/GitHub/DevOps-RoadMap/blue-green-deployment
        run: |
          sed -i 's/version: blue/version: green/g' deployment.yaml
          sed -i 's/version: blue/version: green/g' deployment.yaml

      - name: Run Ansible Playbook Insert Data
        working-directory: /mnt/c/Users/Snetsystems/Documents/GitHub/DevOps-RoadMap/blue-green-deployment
        run: |
          sed -i 's/version: blue/version: green/g' service.yaml

      - name: Run Ansible Playbook DB Backup
        working-directory: /mnt/c/Users/Snetsystems/Documents/GitHub/DevOps-RoadMap/automated-db-backups/ansible
        run: ansible-playbook -i inventory.ini setup.yml --tags "backup"